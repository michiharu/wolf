FORMAT: 1A

# Group Login
## ログイン [/api/v1/login]
### ログイン [POST]
ログイン時のレスポンスとして受け取るデータのうち、manualsは全件取得する。
ただしrootTreeはnullの状態とする。
favorites, likes はマニュアルidを保持する。(マニュアルのプロパティー内の favorites, likes はユーザーidを保持する。)

+ Request  (application/json)

        {
            "id": "user1234",
            "password": "pass1234"
        }

+ Response 200 (application/json)

        {
            "user": {
                "id": "user1234",
                "lastName": "テスト",
                "firstName": "太郎",
                "mail": "user@user.com"
            },
            "users": [
                {
                    "id": "user1234",
                    "lastName": "テスト",
                    "firstName": "太郎"
                },
                {
                    "id": "user2222",
                    "lastName": "テスト",
                    "firstName": "太郎2"
                },
                {
                    "id": "user3333",
                    "lastName": "テスト",
                    "firstName": "太郎3"
                }
            ],

            "userGroups": [
                {
                    "id": "user1234",
                    "name": "営業グループ１",
                    "memberIds": ["user1234"]
                },
                {
                    "id": "user2222",
                    "name": "経営企画グループ",
                    "memberIds": ["user1234", "user2222"]
                }
            ],

            "categories": [
                {
                    "id": "1",
                    "name": "未分類カテゴリー"
                },
                {
                    "id": "2",
                    "name": "営業"
                },
                {
                    "id": "3",
                    "name": "ソフトウェア"
                },
                {
                    "id": "4",
                    "name": "経理"
                },
                {
                    "id": "5",
                    "name": "法務"
                },
                {
                    "id": "6",
                    "name": "教育"
                }
            ]
        }

### ログアウト [DELETE]

+ Response 200

# Group Session Check
## セッションチェック [/api/v1/session-check]
### セッションチェックAPI [POST]

+ Response 200 (application/json)

        {
            "user": {
                "id": "user1234",
                "lastName": "テスト",
                "firstName": "太郎",
                "mail": "user@user.com"
            },
            "users": [
                {
                    "id": "user1234",
                    "lastName": "テスト",
                    "firstName": "太郎"
                },
                {
                    "id": "user2222",
                    "lastName": "テスト",
                    "firstName": "太郎2"
                },
                {
                    "id": "user3333",
                    "lastName": "テスト",
                    "firstName": "太郎3"
                }
            ],

            "userGroups": [
                {
                    "id": "user1234",
                    "name": "営業グループ１",
                    "memberIds": ["user1234"]
                },
                {
                    "id": "user2222",
                    "name": "経営企画グループ",
                    "memberIds": ["user1234", "user2222"]
                }
            ],

            "categories": [
                {
                    "id": "1",
                    "name": "未分類カテゴリー"
                },
                {
                    "id": "2",
                    "name": "営業"
                },
                {
                    "id": "3",
                    "name": "ソフトウェア"
                },
                {
                    "id": "4",
                    "name": "経理"
                },
                {
                    "id": "5",
                    "name": "法務"
                },
                {
                    "id": "6",
                    "name": "教育"
                }
            ]
        }

# Group Password
## パスワード [/api/v1/password/{id}]

### パスワード変更API [PUT]

+ Parameters

    + id: 123 (string, required) - userId

+ Request  (application/json)

        {
            "now": "pass1",
            "next": "pass2"
        }

+ Response 200

# Group Manuals
## マニュアルクエリー [/api/v1/manuals]
### マニュアルクエリーAPI [POST]

favoriteやlikeについては、以下の通り。

+ 0: 全て
+ 1: チェックしたもののみ
+ 2: チェックしてないもの

+ Request  (application/json)

        {
            "filters": {
                "favorite": 0,
                "like": 1,
                "categoryId": null
            },
            "searchText": ["手順１２３"],
            "sortColumn": "favorite",
            "sortDirection": "desc",
            "page": 1,
            "rowsPerPage": 25
        }

+ Response 200 (application/json)

            {
                "queryParams": {
                    "filters": {
                        "favorite": 0,
                        "like": 1,
                        "categoryId": null
                    },
                    "searchText": ["手順１２３"],
                    "sortColumn": "updateAt",
                    "sortDirection": "desc",
                    "page": 1,
                    "rowsPerPage": 25
                },
                "manuals": [
                    {
                        "id": "1",
                        "title": "営業マニュアル",
                        "ownerId": "user1234",
                        "collaboratorIds": ["user2222"],
                        "categoryId": "2",
                        "isPublic": true,
                        "viewerOfUserIds": [],
                        "viewerOfGroupIds": [],
                        "visible": true,
                        "favoriteIds": [],
                        "likeIds": []
                    },
                    {
                        "id": "2",
                        "title": "ソフトウェアマニュアル",
                        "ownerId": "user1234",
                        "collaboratorIds": ["user2222"],
                        "categoryId": "3",
                        "isPublic": true,
                        "viewerOfUserIds": [],
                        "viewerOfGroupIds": [],
                        "visible": true,
                        "favoriteIds": [],
                        "likeIds": []
                    }
                ],
                "count": 78
            }

# Group Manual
## マニュアル [/api/v1/manual/{id}]
マニュアルAPIにおけるtreeデータはPUTでは編集しない、代わりにTreeAPIを通じてtreeデータを編集する。

### マニュアル取得API [GET]
リクエストパラメーターでmanualIdを渡し、rootTreeにNodeデータを持たせて返す。

+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

        {
            "id": "1",
            "title": "営業マニュアル",
            "ownerId": "user1234",
            "collaboratorIds": ["user2222"],
            "categoryId": "2",
            "isPublic": true,
            "viewerOfUserIds": [],
            "viewerOfGroupIds": [],
            "visible": true,
            "favoriteIds": [],
            "likeIds": [],
            "rootTree": {
                "id": "1231",
                "label": "マニュアル１",
                "type": "task",
                "input": "",
                "output": "",
                "preConditions": "",
                "postConditions": "",
                "workerInCharge": "",
                "remarks": "",
                "necessaryTools": "",
                "exceptions": "",
                "imageName": "",
                "imageBlob": "",
                "children": [
                    {
                        "id": "1232",
                        "label": "マニュアル１−１",
                        "type": "task",
                        "input": "",
                        "output": "",
                        "preConditions": "",
                        "postConditions": "",
                        "workerInCharge": "",
                        "remarks": "",
                        "necessaryTools": "",
                        "exceptions": "",
                        "imageName": "",
                        "imageBlob": "",
                        "children": []
                    }
                ]
            }
        }


### マニュアル作成API [POST]

+ Request  (application/json)

        {
            "id": "tmp:1",
            "title": "マニュアル1",
            "ownerId": "user1234",
            "collaboratorIds": [],
            "category": "3",
            "isPublic": true,
            "viewerOfUserIds": [],
            "viewerOfGroupIds": [],
            "visible": true,
            "favorites": [],
            "likes": []
        }

+ Response 200 (application/json)

        {
            "id": "1",
            "title": "マニュアル1",
            "ownerId": "user1234",
            "collaboratorIds": [],
            "categoryId": "3",
            "isPublic": true,
            "visible": true,
            "viewerOfUserIds": [],
            "viewerOfGroupIds": [],
            "favorites": [],
            "likes": []
        }

### マニュアル編集API [PUT]
マニュアル編集APIで、実際に編集される可能性のあるプロパティーは "title", "ownerId", "categoryId", "isPublic", "visible"の4つだけです。
配列データを持つプロパティーは別途APIを用意しているのでそこから編集されます。

+ Parameters

    + id: 123 (string, required) - manualId

+ Request  (application/json)

        {
            "id": "1",
            "title": "マニュアル1",
            "ownerId": "user1234",
            "collaboratorIds": [],
            "categoryId": "3",
            "isPublic": true,
            "viewerOfUserIds": [],
            "viewerOfGroupIds": [],
            "visible": true,
            "favorites": [],
            "likes": []
        }

+ Response 200 (application/json)

        {
            "id": "1",
            "title": "マニュアル1",
            "ownerId": "user1234",
            "collaboratorIds": [],
            "category": "3",
            "isPublic": true,
            "viewerOfUserIds": [],
            "viewerOfGroupIds": [],
            "visible": true,
            "favoriteIds": [],
            "likeIds": []
        }

### マニュアル削除API [DELETE]
+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

# Group Manual Title Check
## マニュアルタイトルチェック [/api/v1/manual-title-check]
### マニュアルタイトルチェックAPI [POST]

+ Request  (application/json)

        {
            "title": "新しいマニュアルタイトル"
        }

+ Response 200 (application/json)

        {
            "title": "新しいマニュアルタイトル",
            "valid": true
        }

# Group Manual Generate Title
## マニュアルタイトル生成 [/api/v1/manual-generate-title]
### マニュアルタイトル生成API [POST]

+ Request  (application/json)

        {
            "title": "元となるタイトル名"
        }

+ Response 200 (application/json)

        {
            "title": "生成したタイトル",
            "valid": true
        }

# Group Tree
## マニュアルツリー [/api/v1/tree/{manualId}]
DB未保存のデータはidを"tmp:~"で始めるルールとする。
おそらく親となるレコードのIDを子が持つDB設計になると思うが、
レコードの削除はrootとなるマニュアルデータ以外は明示的なAPIを持たないため、
編集時に削除されたデータがあるかどうかをチェックし、
あれば該当レコードを削除するロジックをサーバーサイドで組む必要がある。

### ツリー編集API [PUT]

+ Parameters

    + manualId: 123 (string, required) - manualId

+ Request  (application/json)

        {
            "id": "12",
            "label": "マニュアル１−１",
            "type": "task",
            "input": "",
            "output": "",
            "preConditions": "",
            "postConditions": "",
            "workerInCharge": "",
            "remarks": "",
            "necessaryTools": "",
            "exceptions": "",
            "imageName": "",
            "imageBlob": "",
            "children": [
                {
                    "id": "tmp:12",
                    "label": "マニュアル１−１",
                    "type": "task",
                    "input": "",
                    "output": "",
                    "preConditions": "",
                    "postConditions": "",
                    "workerInCharge": "",
                    "remarks": "",
                    "necessaryTools": "",
                    "exceptions": "",
                    "imageName": "",
                    "imageBlob": "",
                    "children": []
                }
            ]
        }

+ Response 200 (application/json)

        {
            "id": "12",
            "label": "マニュアル１−１",
            "type": "task",
            "input": "",
            "output": "",
            "preConditions": "",
            "postConditions": "",
            "workerInCharge": "",
            "remarks": "",
            "necessaryTools": "",
            "exceptions": "",
            "imageName": "",
            "imageBlob": "",
            "children": [
                {
                    "id": "5g6u7i8d",
                    "label": "マニュアル１−１",
                    "type": "task",
                    "input": "",
                    "output": "",
                    "preConditions": "",
                    "postConditions": "",
                    "workerInCharge": "",
                    "remarks": "",
                    "necessaryTools": "",
                    "exceptions": "",
                    "imageName": "",
                    "imageBlob": "",
                    "children": []
                }
            ]
        }

# Group Favorite
## お気に入り [/api/v1/favorites/{id}]
### お気に入り登録 [POST]

+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

### お気に入り解除 [DELETE]

+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

# Group Like
## いいね [/api/v1/likes/{id}]
### いいね登録 [POST]

+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

### いいね解除 [DELETE]

+ Parameters

    + id: 123 (string, required) - manualId

+ Response 200 (application/json)

# Group Collaborator
## 共同編集者 [/api/v1/collaborators/{manualId}/{userId}]
### 共同編集者登録 [POST]

+ Parameters

    + manualId: 123 (string, required) - manualId
    + userId: 123 (string, required) - userId

+ Response 200 (application/json)

### 共同編集者解除 [DELETE]

+ Parameters

    + manualId: 123 (string, required) - manualId
    + userId: 123 (string, required) - userId

+ Response 200 (application/json)